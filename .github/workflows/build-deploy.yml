name: Build and Deploy

on:
  push:
    branches:
      - main

# 環境変数の設定
# OIDC_ARN: GitHub ActionsがAWSリソースにアクセスするためのIAMロールのARN
# ECR_REGISTRY: Amazon Elastic Container Registry (ECR) のURL
# ECR_REPOSITORY: ECRリポジトリ名
# APP: アプリケーション名（ECSサービス名とクラスター名に使用）
env:
  OIDC_ARN: arn:aws:iam::533267095025:role/GitHubActionsOIDC
  ECR_REGISTRY: 533267095025.dkr.ecr.ap-northeast-1.amazonaws.com
  ECR_REPOSITORY: go-simple-server
  APP: go-simple-server

# GitHub Actionsの権限設定
# id-token: write - OIDCトークンの生成と使用を許可
# contents: read - リポジトリの内容の読み取りを許可
permissions:
  id-token: write
  contents: read

jobs:
  build-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      # リポジトリのコードをチェックアウト
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Docker Buildxをセットアップ（マルチプラットフォームビルドとキャッシングのサポート）
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Dockerビルドキャッシュの設定（ビルド時間短縮のため）
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # AWS認証情報の設定（OIDCを使用）
      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ env.OIDC_ARN }}
          aws-region: ap-northeast-1

      # Amazon ECRへのログイン
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ECR_REGISTRY }}

      # Dockerイメージのビルドとプッシュ
      # タグにはコミットのSHAを使用し、キャッシュを活用
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # ビルドキャッシュの更新（次回のビルドのために保存）
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      
      # ECSタスク定義の更新（新しいDockerイメージを反映）
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./aws/task-definition.json
          container-name: ${{ env.APP }}
          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
      
      # 更新したタスク定義を使用してECSにデプロイ
      # サービスの安定性を待機してデプロイ完了を確認
      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.APP }}
          cluster: ${{ env.APP }}
          wait-for-service-stability: true